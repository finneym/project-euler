-- The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
-- 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
-- Let us list the factors of the first seven triangle numbers:
--      1: 1
--      3: 1,3
--      6: 1,2,3,6
--     10: 1,2,5,10
--     15: 1,3,5,15
--     21: 1,3,7,21
--     28: 1,2,4,7,14,28
-- We can see that 28 is the first triangle number to have over five divisors.
-- What is the value of the first triangle number to have over five hundred divisors?

module P012 where

import Data.Numbers.Primes
import Data.List.Unique
import Debug.Trace


main :: Int -> Int
main n = main' n [1]

main' :: Int -> [Int] -> Int
main' n c
    | 2 * ( length (getFactors $ sum c)) > n = sum c
    | otherwise = main' (trace ("Number: " ++ show (sum c) ++ " Factors: " ++ show (getFactors $ sum c)) (n)) (c ++ [1 + (length c)])


getFactors :: Int -> [Int]
getFactors n = getFactors' n 1 (getMax n)

getFactors' :: Int -> Int -> Int -> [Int]
getFactors' n cur max
    | cur > max = []
    | isFactor cur n = [cur] ++ getFactors' n (cur + 1) max
    | otherwise = getFactors' n (cur + 1) max

getMax :: Int -> Int
getMax = floor . sqrt . fromIntegral

isFactor :: Int -> Int -> Bool
isFactor f n = n `mod` f == 0

